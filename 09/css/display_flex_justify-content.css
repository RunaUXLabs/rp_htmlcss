@charset "UTF-8";

/* 플렉스 박스 */
.flex {
  display: flex;
  /* 플렉스 컨테이너 만들때 필수선언!
  빼먹으면 하위속성들이 전혀 적용되지 않는다.*/

  border: solid 1px black;
  /* padding: 16px; */
  /* 컨테이너의 좌우여백을 설정하고 싶으면
  padding: ;을 적극적으로 사용하자.
  해당 여백은 나눠먹는 공간에 포함되지 않음 */
  /* padding: 0 40px; */
  background-color: aquamarine;

  /* 겉 여백 */
  margin-bottom: 16px;
}

.flex-start {
  /* 아이템을 시작 쪽으로 */
  justify-content: flex-start;
  /* justify-content의 기본값은 flex-start
  아무것도 안쓰면 기본값 적용! */
}

.flex-end {
  /* 아이템을 끝 쪽으로 */
  justify-content: flex-end;
}

.flex-center {
  /* 아이템을 중심으로 */
  justify-content: center;
}

.flex-space-between {
  /* 아이템끼리 최대한 거리 두기 */
  justify-content: space-between;
}

.flex-space-around {
  /* 아이템 양옆에 같은 여백,
  해당 여백은 자동으로 설정되는
  갭의 1/2 크기가 자동 반영된다. */

  /* 컨테이너에 패딩값이 있다면 그것은 확보하고
  할당받음 */
  justify-content: space-around;
}

.flex-space-evenly {
  /* 아이템 사이 여백 크기 일치 */
  justify-content: space-evenly;
  /* 아이템 사이와 첫번째 자식의 왼쪽 공간,
  마지막 자식의 오른쪽 공간이 동일 */

  /* 컨테이너에 패딩값이 있다면 그것은 확보하고
  할당받음 */
}

.flex > div {
  /* 보라 배경색 */
  background-color: blueviolet;
  color: white;

  /* 테두리 */
  border: solid 1px black;

  /* 바깥여백 */
  /* margin: 0 20px; */
}
.flex > div:last-child {
  /* 자식이 특징(여백, 사이즈)을 갖는다면
  무조건 수용하는 flex부모,
  특징이 없는 형제는 양보 */
  width: 200px;
  margin: 0 40px;
}